openapi: 3.0.1
info:
  title: FastAPI
  version: 0.1.0
paths:
  /transcribe:
    post:
      summary: Start Transcribe
      operationId: start_transcribe_transcribe_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranscribeQuery'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /status/{task_id}:
    get:
      summary: Get Transcribe Status
      operationId: get_transcribe_status_status__task_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
            title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /result/{task_id}:
    get:
      summary: Get Transcribe Result
      operationId: get_transcribe_result_result__task_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
            title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /token/one-time/create:
    post:
      summary: Create One Time Token
      operationId: create_one_time_token_token_one_time_create_post
      parameters:
        - name: telegram_id
          in: query
          required: true
          schema:
            type: integer
            title: Telegram Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/one-time:
    post:
      summary: Auth With One Time
      operationId: auth_with_one_time_auth_one_time_post
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
            title: Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/refresh:
    post:
      summary: Refresh Tokens
      operationId: refresh_tokens_auth_refresh_post
      parameters:
        - name: refresh_token
          in: query
          required: true
          schema:
            type: string
            title: Refresh Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /me:
    get:
      summary: Me
      operationId: me_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - HTTPBearer: []
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    TokenPair:
      properties:
        access_token:
          type: string
          title: Access Token
        refresh_token:
          type: string
          title: Refresh Token
        token_type:
          type: string
          title: Token Type
          default: bearer
      type: object
      required:
        - access_token
        - refresh_token
      title: TokenPair
    TranscribeQuery:
      properties:
        file_url:
          type: string
          title: File Url
        file_name:
          type: string
          title: File Name
      type: object
      required:
        - file_url
        - file_name
      title: TranscribeQuery
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
